{"version":3,"sources":["img/test.png","components/Homepage/Banner/banner.tsx","components/Homepage/DescriptionBlock/DescriptionBlock.tsx","components/Homepage/Quote/Quote.tsx","components/Homepage/FAQs/FAQ-segment.tsx","components/Homepage/FAQs/FAQs.tsx","pages/Home.jsx","components/Homepage/HeroSection/user-hero-section.tsx","firebase.ts","components/Footer/Footer.tsx","components/Calendar/calendar-event.tsx","components/Calendar/user-calendar.tsx","components/Calendar/calendar-upcoming.tsx","pages/CalendarPage.tsx","pages/404.tsx","extra/appSlice.ts","img/googleIcon.png","components/Login/Login.tsx","components/Navbar/navbar.tsx","components/Login/Register.tsx","App.tsx","app/store.ts","reportWebVitals.js","index.tsx"],"names":["Banner","props","className","description","href","src","img","alt","DescriptionBlock","Quote","quote","author","FAQSegment","Avatar","question","answer","FAQs","map","q","Home","title","image","id","HeroSection","state","selectedQuote","text","hr","Date","getHours","fetch","then","response","json","data","randNum","Math","floor","random","length","setState","this","name","Button","variant","color","size","React","Component","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","provider","GoogleAuthProvider","Footer","useAuthState","user","onClick","signOut","CalendarEvent","CardActionArea","CardContent","Typography","component","time","gutterBottom","speakers","Calendar","currentDate","selectedDate","add","days","getFullMonth","bind","dayColour","start","month","day","startOfWeek","startOfMonth","endDay","endOfWeek","endOfMonth","isBefore","push","isSameDay","isSameMonth","format","months","date","toString","Grid","container","spacing","item","xs","CalendarUpcoming","CalendarPage","Switch","onChange","document","body","classList","toggle","NotFound","appSlice","createSlice","initialState","chatID","reducers","login","action","payload","logout","enterChat","actions","Login","useState","email","setEmail","password","setPassword","dispatch","useDispatch","LoginContainer","LoginInnerContainer","type","value","e","target","placeholder","preventDefault","signInWithEmailAndPassword","userAuth","uid","displayName","photoURL","catch","error","alert","signInWithPopup","message","GoogleIcon","styled","div","Navbar","scrolled","setScrolled","handleScroll","offset","window","scrollY","useEffect","addEventListener","navbarClasses","mobileMenuClasses","setMobileMenuClasses","join","to","includes","Register","setName","profilePic","setProfilePic","RegisterContainer","RegisterInnerContainer","createUserWithEmailAndPassword","updateProfile","App","loading","onAuthStateChanged","photoUrl","fadeIn","path","exact","configureStore","reducer","userReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.7e68ea46.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/test.1a0abdd8.png\";","import React from 'react';\r\nimport img from '../../../img/test.png'; // HAving an issue moving this to be a prop\r\n\r\n\r\ninterface IProps {\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nconst Banner = (props: IProps) => {\r\n\r\n    return (\r\n        <div className=\"banner\">\r\n            <div className=\"homepage-banner-img\">\r\n                <div className=\"homepage-banner-text\">\r\n                    <h1><span>Talking</span> to others is the best form of <span>EPICNESS</span></h1>\r\n                    <p>{props.description}</p>\r\n                    <a href=\"/sign-up\">Sign Up!</a>\r\n                    <a href=\"/about\">About Mynd</a>\r\n                </div>\r\n                <img src={img} alt=\"test\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner;\r\n","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport UserTestimonial from './UserTestimonial';\r\n\r\n\r\ninterface IProps {\r\n    image: ImageBitmap;\r\n}\r\n\r\nconst DescriptionBlock = (props: IProps) => {\r\n\r\n    return (\r\n            <div className=\"container\">\r\n                <div className=\"content\"> \r\n                    <div className=\"homepage-description\">\r\n                        <h1>What is Mynd?</h1>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec augue dui, luctus in lobortis eget, ullamcorper tristique ante. Duis sit amet elit maximus, fringilla diam vel, pretium ex. Morbi elit erat, volutpat quis nibh sit amet, egestas interdum nunc. Aliquam justo dui, bibendum non risus non, tincidunt finibus mauris.</p>\r\n                        <hr />\r\n                        <ul>\r\n                            <li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</li>\r\n                            <li>Aliquam tincidunt mauris eu risus.</li>\r\n                            <li>Vestibulum auctor dapibus neque.</li>\r\n                            <li>Nunc dignissim risus id metus.</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DescriptionBlock;\r\n","import React from 'react';\r\n\r\ninterface IProps {\r\n    quote: string;\r\n    author: string;\r\n}\r\n\r\nconst Quote = (props: IProps) => {\r\n\r\n    return (\r\n        <div className=\"quote container\">\r\n            <div className=\"content\">\r\n                \"{props.quote}\" - <span>{props.author}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quote;\r\n","import { Avatar } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\n\r\n/*==== TODO: NEED TO ADD IMG TO PROPS ====*/\r\n\r\ninterface IProps {\r\n    question: string;\r\n    answer: string;\r\n}\r\n\r\nconst FAQSegment = (props: IProps) => {\r\n\r\n    return (\r\n        <div className=\"FAQSegment-container\">\r\n            <div className=\"top-layer\">\r\n                <Avatar className=\"FAQ-image\" src=\"https://st4.depositphotos.com/27941032/30853/v/950/depositphotos_308538152-stock-illustration-target-minimal-thin-line-web.jpg\" alt=\"test\"/>\r\n                <h2>{props.question}</h2>\r\n            </div>\r\n            <p>{props.answer}</p>\r\n            <div className=\"vl\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FAQSegment;\r\n","import React from 'react';\r\n\r\nimport FAQSegment from './FAQ-segment';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\nconst FAQs = (props: IProps) => {\r\n\r\n    const questions = [\r\n        {\r\n            \"question\": 'Question 1',\r\n            \"answer\": 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec odio. Quisque volutpat mattis eros. Nullam malesuada erat ut turpis. Suspendisse urna nibh, viverra non, semper suscipit, posuere a, pede.'\r\n        },\r\n        {\r\n            \"question\": 'Question 2',\r\n            \"answer\": 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec odio. Quisque volutpat mattis eros. Nullam malesuada erat ut turpis. Suspendisse urna nibh, viverra non, semper suscipit, posuere a, pede.'\r\n        },\r\n        {\r\n            \"question\": 'Question 3',\r\n            \"answer\": 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec odio. Quisque volutpat mattis eros. Nullam malesuada erat ut turpis. Suspendisse urna nibh, viverra non, semper suscipit, posuere a, pede.'\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"faqs-container container\">\r\n            <div className=\"content\">\r\n                <h1>FAQs</h1>\r\n                <div className=\"question-container\">\r\n                    {questions.map((q) => <FAQSegment question={q.question} answer={q.answer} />)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FAQs;\r\n","import Banner from '../components/Homepage/Banner/banner';\r\nimport DescriptionBlock from '../components/Homepage/DescriptionBlock/DescriptionBlock';\r\nimport Quote from '../components/Homepage/Quote/Quote';\r\n\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nimport img from '../img/test.png';\r\nimport FAQs from '../components/Homepage/FAQs/FAQs';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <Banner title=\"\" description=\"Join hundreds of others giving and receiving peer support now! En stuff\"/>\r\n            \r\n            <DescriptionBlock image={img} />\r\n\r\n            <Quote quote=\"An awesome quote from our company!\" author=\"Mynd CEO\"/>\r\n\r\n            <FAQs />\r\n\r\n            {/* Temporary space filler */}\r\n            <div id=\"background-stripe\"></div>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Home;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport './HeroSection.scss';\r\n\r\n\r\ninterface IProps {\r\n    name: string;\r\n}\r\n\r\ninterface IState {\r\n    selectedQuote: { [key: string]: string};\r\n    hr: number;\r\n}\r\n\r\nclass HeroSection extends React.Component<IProps> {\r\n    state: IState = {\r\n        selectedQuote: {text:'quote',author:'author'},\r\n        hr: new Date().getHours(),\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://type.fit/api/quotes\")\r\n         .then((response) => response.json())\r\n         .then((data) => {\r\n            let randNum = Math.floor(Math.random()*data.length);\r\n            this.setState({selectedQuote: data[randNum]});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"hero-container\">\r\n                <div className=\"bg-text\">\r\n                    {(this.state.hr >= 18) ? <h1>Good Evening {this.props.name}</h1> : (this.state.hr >= 12) ? <h1>Good Afternoon {this.props.name}</h1> : <h1>Good Morning {this.props.name}</h1>}\r\n                    <p> \"{this.state.selectedQuote.text}\" - {this.state.selectedQuote.author}</p>\r\n                </div>\r\n                <div className=\"bg-buttons\">\r\n                    <Button variant=\"contained\" color=\"primary\" size=\"large\" className=\"h-btn\">Jump in</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" size=\"large\" className=\"h-btn\">DMs</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroSection;","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAfWKz58uiIA8LLgDVN4q1xISRzUkXkalQ\",\r\n  authDomain: \"mynd-project.firebaseapp.com\",\r\n  databaseURL: \"https://mynd-project-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"mynd-project\",\r\n  storageBucket: \"mynd-project.appspot.com\",\r\n  messagingSenderId: \"253356081597\",\r\n  appId: \"1:253356081597:web:63418886db235ea212d2d4\",\r\n  measurementId: \"G-R9Z0QFX1C9\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider, db };","import { Button } from '@material-ui/core';\r\nimport { auth } from '../../firebase';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n}\r\n\r\nconst Footer = (props: IProps) => {\r\n    const [user] = useAuthState(auth);\r\n\r\n    return (\r\n        // mostly just used for checking if thing worked\r\n        <footer>\r\n            <div className=\"inner-footer\">\r\n                <div className=\"footer-top\">\r\n                    <h1>Mynd</h1>\r\n                    <span>General</span>\r\n                    <span>Features</span>\r\n                    <span>User</span>\r\n                </div>\r\n                <div className=\"footer-bottom\">\r\n                    <div className=\"footer-brand\">\r\n                    </div>\r\n                    <div className=\"footer-section\">\r\n                        <p>Link 1</p>\r\n                        <p>Link 2</p>\r\n                        <p>Link 3</p>\r\n                        <p>Link 4</p>\r\n                    </div>\r\n                    <div className=\"footer-section\">\r\n                        <p>Link 1</p>\r\n                        <p>Link 2</p>\r\n                        <p>Link 3</p>\r\n                        <p>Link 4</p>\r\n                    </div>\r\n                    <div className=\"footer-section\">\r\n                        {user ? (\r\n                            <button onClick={() => auth.signOut()}>\r\n                                Sign Out\r\n                            </button>\r\n                        ) : (\r\n                            <p>Logged Out</p>\r\n                        )}\r\n                        <p>My Chats</p>\r\n                        <p>Recent</p>\r\n                        <p>Link 4</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"copyright\">\r\n                Made by Mynd\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import { Card, CardActionArea, CardContent, Typography } from \"@material-ui/core\";\r\nimport React from \"react\"\r\n\r\ninterface IProps {\r\n    time: string,\r\n    title: string,\r\n    speakers: string,\r\n}\r\n\r\nclass CalendarEvent extends React.Component<IProps> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"calendar-event-card\">\r\n                <CardActionArea>\r\n                    <CardContent>\r\n                    <Typography variant=\"h6\" component=\"h2\">\r\n                            {this.props.time}\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {this.props.title}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\"component=\"p\">\r\n                            Speaking by: {this.props.speakers}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CalendarEvent;\r\n","import React from \"react\"\r\nimport { format, startOfMonth, startOfWeek, isBefore, endOfWeek, add , endOfMonth, isSameMonth, isSameDay} from 'date-fns'\r\nimport CalendarEvent from \"./calendar-event\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    currentDate: Date;\r\n    selectedDate: Date;\r\n}\r\n\r\nclass Calendar extends React.Component<IProps> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.getFullMonth = this.getFullMonth.bind(this)\r\n        this.dayColour = this.dayColour.bind(this)\r\n    }\r\n\r\n    state: IState = {\r\n        currentDate: new Date(),\r\n        selectedDate: add(new Date(), {days:1}),\r\n    }\r\n\r\n    getFullMonth(start: Date) {\r\n        const month = []\r\n        let day = startOfWeek(startOfMonth(start));\r\n        let endDay = endOfWeek(endOfMonth(start));\r\n        while (isBefore(day,endDay)) {\r\n            month.push(day);\r\n            day = add(day,{days:1});\r\n        }\r\n        return month;\r\n    }\r\n\r\n    dayColour(day: Date) {\r\n        return isSameDay(day, this.state.currentDate) ? 'calendar-current-day' : isSameDay(day, this.state.selectedDate) ? 'calendar-selected-day' : isSameMonth(day,this.state.selectedDate) ? 'calendar-current-month': 'calendar-standard'; \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"calendar-container\">\r\n                    <header className=\"month-name\">\r\n                        <h2>  {format(this.state.selectedDate,'MMMM yyyy')}  </h2>\r\n                        <span className=\"calendar-arrows\" onClick={() => this.setState({selectedDate: add(this.state.selectedDate, {months:-1})})}>&#8592;</span>\r\n                        <span className=\"calendar-arrows\" onClick={() => this.setState({selectedDate: this.state.currentDate})}>Today</span>\r\n                        <span className=\"calendar-arrows\" onClick={() => this.setState({selectedDate: add(this.state.selectedDate, {months:1})})}>&#8594;</span>\r\n                    </header>\r\n                    <ul className=\"weekdays\">\r\n                        {[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"].map((day) =>\r\n                            <li className=\"day-name\" key={day}><abbr title={day[0]}>{day}</abbr></li>\r\n                        )}\r\n                    </ul>\r\n                    <div className=\"calendar-grid\">\r\n                        <ol className=\"day\">\r\n                            {this.getFullMonth(this.state.selectedDate).map(\r\n                                (date) => <li className=\"calendar-li\" key={date.toString()}>\r\n                                        <div className={this.dayColour(date)} onClick={() => this.setState({selectedDate: date})}>\r\n                                            {format(date,'dd')}\r\n                                        </div>\r\n                                </li>\r\n                            )}\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n                <div className=\"selected-day-events\">\r\n                    <h1> Events on {format(this.state.selectedDate, 'dd MMMM YYY')}</h1>\r\n                    <Grid container spacing={2}>\r\n                        {/* TODO QUERY EVENTS OF SELECTED DAY */}\r\n                        {[{\r\n                        \"title\": \"Some kinda speaking event\",\r\n                        \"speakers\": \"Alex, Sam\",\r\n                        \"time\": \"9:15\",\r\n                        }, {\r\n                        \"title\": \"Some kinda speaking event\",\r\n                        \"speakers\": \"Alex\",\r\n                        \"time\": \"10:15\",\r\n                        }, {\r\n                        \"title\": \"This is just dummy data lmao\",\r\n                        \"speakers\": \"Alex, Harvey\",\r\n                        \"time\": \"19:15\",\r\n                        }, {\r\n                        \"title\": \"hiya\",\r\n                        \"speakers\": \"Bob\",\r\n                        \"time\": \"21:15\",\r\n                        }, {\r\n                        \"title\": \"This is gettin late\",\r\n                        \"speakers\": \"Bob\",\r\n                        \"time\": \"23:15\",\r\n                        }, {\r\n                        \"title\": \"Lorem Ipsum amiright\",\r\n                        \"speakers\": \"Bob\",\r\n                        \"time\": \"23:35\",\r\n                        }, {\r\n                        \"title\": \"John i think\",\r\n                        \"speakers\": \"John\",\r\n                        \"time\": \"23:45\",\r\n                        }].map(\r\n                            (data) => <Grid item xs={4}>\r\n                            <li className=\"calendar-events-items\"><CalendarEvent title={data.title} speakers={data.speakers} time={data.time}/></li>\r\n                        </Grid>\r\n                        )}\r\n                    </Grid>\r\n                </div>\r\n            </>    \r\n        )\r\n    }\r\n}\r\nexport default Calendar;\r\n","import React from \"react\"\r\nimport { format } from 'date-fns'\r\nimport CalendarEvent from \"./calendar-event\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    currentDate: Date,\r\n}\r\n\r\nclass CalendarUpcoming extends React.Component<IProps> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n\r\n    state: IState = {\r\n        currentDate: new Date(),\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"calendar-upcoming-events\">\r\n                <h1>{format(this.state.currentDate, 'EEEE d MMMM yyyy')}</h1>\r\n                <h2>Your Events Today:</h2>\r\n                <div className=\"calender-events-list\">\r\n                    <ul>\r\n                        {/* TODO QUERY EVENTS OF CURRENT DAY */}\r\n                        {[{\r\n                            \"title\": \"Some kinda speaking event\",\r\n                            \"speakers\": \"Alex, Sam\",\r\n                            \"time\": \"9:15\",\r\n                        }, {\r\n                            \"title\": \"Some kinda speaking event\",\r\n                            \"speakers\": \"Alex\",\r\n                            \"time\": \"10:15\",\r\n                        }, {\r\n                            \"title\": \"This is just dummy data lmao\",\r\n                            \"speakers\": \"Alex, Harvey\",\r\n                            \"time\": \"19:15\",\r\n                        }, {\r\n                            \"title\": \"hiya\",\r\n                            \"speakers\": \"Bob\",\r\n                            \"time\": \"21:15\",\r\n                        }, {\r\n                            \"title\": \"This is gettin late\",\r\n                            \"speakers\": \"Bob\",\r\n                            \"time\": \"23:15\",\r\n                        }, {\r\n                            \"title\": \"I just want scrolling\",\r\n                            \"speakers\": \"John\",\r\n                            \"time\": \"23:45\",\r\n                        }, {\r\n                            \"title\": \"MORE SCROLL!!!\",\r\n                            \"speakers\": \"James\",\r\n                            \"time\": \"23:50\",\r\n                        }].map(\r\n                            (data) =>\r\n                                <li className=\"calendar-events-items\"><CalendarEvent title={data.title} speakers={data.speakers} time={data.time} /></li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default CalendarUpcoming;\r\n","import {Grid, Switch} from \"@material-ui/core\";\r\nimport React from \"react\"\r\nimport Calendar from '../components/Calendar/user-calendar'\r\nimport CalendarUpcoming from '../components/Calendar/calendar-upcoming'\r\nimport '../components/Calendar/user-calendar.scss'\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nclass CalendarPage extends React.Component<IProps> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n\r\n    state: IState = {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"calendar-page\">\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={3}>\r\n                            <Switch size=\"small\" onChange={() => document.body.classList.toggle(\"dark-mode\")} />\r\n                            <CalendarUpcoming />\r\n                        </Grid>\r\n                        <Grid item xs={9}>\r\n                            <Calendar />\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default CalendarPage;\r\n","const NotFound = () => {\r\n    return (\r\n        <>\r\n            <h1 id=\"not-found\">A 404 page. Better go back.</h1>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\n/* \r\n  when chat is implemented specific ones can be entered depending on the user\r\n  most of the user stuff is useless cos of firebase hooks but put them in anyway\r\n*/\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState: {\r\n    user: null,\r\n    chatID: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n    enterChat: (state, action) => {\r\n      state.chatID = action.payload.chatID;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout, enterChat } = appSlice.actions;\r\n\r\nexport const selectUser = (state: any) => state.user.user;\r\n\r\nexport const selectchatID = (state: any) => state.app.chatID;\r\n\r\nexport default appSlice.reducer;","export default __webpack_public_path__ + \"static/media/googleIcon.6bc7d493.png\";","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../extra/appSlice';\r\nimport { Button } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport { auth, provider } from '../../firebase';\r\nimport GoogleIcon from '../../img/googleIcon.png';\r\n\r\ninterface IProps {\r\n}\r\n\r\nconst Login = (props: IProps) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const loginToApp = (e: any) => {\r\n    e.preventDefault();\r\n    auth.signInWithEmailAndPassword(email, password)\r\n      .then(userAuth => {\r\n        dispatch(login({\r\n          email: userAuth.user?.email,\r\n          uid: userAuth.user?.uid,\r\n          displayName: userAuth.user?.displayName,\r\n          photoURL: userAuth.user?.photoURL,\r\n        }));\r\n      })\r\n      .catch(error => alert(error));\r\n  };\r\n\r\n  const signInGoogle = (e: any) => {\r\n    e.preventDefault();\r\n    auth.signInWithPopup(provider).catch(error => alert(error.message));\r\n  };\r\n\r\n  return (\r\n    <LoginContainer>\r\n      <LoginInnerContainer>\r\n        <h1>Mynd</h1>\r\n        <h2>Login</h2>\r\n        <form>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            placeholder=\"Email\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n            placeholder=\"Password\"\r\n          />\r\n          <Button className='button' type=\"submit\" onClick={loginToApp}>Sign In</Button>\r\n          <Button className='button' onClick={signInGoogle}>\r\n            <img src={GoogleIcon} />\r\n            Google Sign In\r\n          </Button>\r\n          <Button className='button' href='/register'>\r\n            Or Register\r\n          </Button>\r\n        </form>\r\n      </LoginInnerContainer>\r\n    </LoginContainer>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst LoginContainer = styled.div`\r\n  background-color: #2c2c2c;\r\n  height: 100vh;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst LoginInnerContainer = styled.div`\r\n  padding: 100px;\r\n  text-align: center;\r\n  background: linear-gradient(to bottom, #66ffcc 0%, #99ff99 100%);\r\n  border-radius: 10px;\r\n  box-shadow: 0 1px 3px rgba(0, 255, 0, 1), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  display: grid;\r\n  place-items: center;\r\n\r\n  > h1 {\r\n    color: #ed4f3a;\r\n  }\r\n\r\n  > h2 {\r\n    color: black;\r\n  }\r\n\r\n  > form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    > input {\r\n      width: 35vw;\r\n      height: 5vh;\r\n      font-size: 20px;\r\n      padding-left: 10px;\r\n      margin-bottom: 10px;\r\n      border-radius: 5px;\r\n    }\r\n\r\n    > .button {\r\n      width: 36vw;\r\n      height: 5vh;\r\n      font-size: medium;\r\n      color: #fff;\r\n      background-color: #26a8ff;\r\n      border-radius: 5px;\r\n      margin-bottom: 7px;\r\n\r\n      :hover {\r\n        background-color: white;\r\n        transition: 0.2s;\r\n        color: black;\r\n        cursor: pointer;\r\n      }\r\n\r\n      img {\r\n        object-fit: contain;\r\n        height: 15px;\r\n        margin-right: 5px;\r\n      }\r\n    }\r\n  }\r\n`;","import { Link } from 'react-router-dom';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { useState, useEffect } from 'react';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from '../../firebase';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\nconst Navbar = (props: IProps) => {\r\n    const [user] = useAuthState(auth);\r\n    const [scrolled, setScrolled] = useState(false);\r\n    let photoURL: string = user?.photoURL || '';\r\n    let displayName: string = user?.displayName || '';\r\n\r\n    const handleScroll = () => {\r\n        const offset = window.scrollY;\r\n        if (offset > 1) {\r\n            setScrolled(true);\r\n        }\r\n        else {\r\n            setScrolled(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n    });\r\n\r\n    let navbarClasses = ['navbar'];\r\n    if (scrolled) {\r\n        navbarClasses.push('scrolled');\r\n    }\r\n\r\n\r\n    const [mobileMenuClasses, setMobileMenuClasses] = useState(['navbar-mobile-menu', 'hide-menu']);\r\n\r\n    function showHideMenu() {\r\n        if (mobileMenuClasses.includes('hide-menu')) {\r\n            setMobileMenuClasses(['navbar-mobile-menu']);\r\n        } else {\r\n            setMobileMenuClasses(['navbar-mobile-menu', 'hide-menu']);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={navbarClasses.join(\" \")}>\r\n            <div className=\"navbar-inner\">\r\n                <div className=\"nav-brand\">\r\n                    <Link to=\"/\">Mynd</Link>\r\n                </div>\r\n                <div className=\"nav-item\">\r\n                    <Link to=\"/home\">Home</Link>\r\n                </div>\r\n                <div className=\"nav-item\">\r\n                    <Link to=\"/calendar\">Calendar</Link>\r\n                </div>\r\n                <div className=\"nav-item\">\r\n                    <Link to=\"/\">Temp 1</Link>\r\n                </div>\r\n                <div className=\"nav-item\">\r\n                    <Link to=\"/\">Temp 2</Link>\r\n                </div>\r\n                <div className=\"nav-user\">\r\n                    <Link to=\"/\">\r\n                        <Avatar src={photoURL} alt={displayName} />\r\n                    </Link>\r\n                </div>\r\n                <div className=\"nav-icon\">\r\n                    <ExitToAppIcon\r\n                        onClick={() => auth.signOut()}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"navbar-mobile\">\r\n                <div className=\"navbar-mobile-main\">\r\n                    <Link to=\"/\">Mynd</Link>\r\n                    <button onClick={() => showHideMenu()}>+</button>\r\n                </div>\r\n                <div className={mobileMenuClasses.join(\" \")}>\r\n                    <ul>\r\n                        <li><Link to=\"/\">Home</Link></li>\r\n                        <li><Link to=\"/calendar\">Calendar</Link></li>\r\n                        <li><Link to=\"/\">Temp 1</Link></li>\r\n                        <li><Link to=\"/\">Temp 2</Link></li>\r\n                        <li>\r\n                            <Link to=\"/\">\r\n                                <Avatar src={photoURL} alt={displayName} />\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <ExitToAppIcon />\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import { Button } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport { auth, provider } from '../../firebase';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../extra/appSlice';\r\nimport GoogleIcon from '../../img/googleIcon.png';\r\n\r\ninterface IProps {\r\n}\r\n\r\nconst Register = (props: IProps) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [profilePic, setProfilePic] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const register = (e: any) => {\r\n    e.preventDefault();\r\n    if (!name) {\r\n      return alert(\"Please enter a full name\");\r\n    };\r\n\r\n    auth.createUserWithEmailAndPassword(email, password)\r\n      .then(userAuth => {\r\n        userAuth.user?.updateProfile({\r\n          displayName: name,\r\n          photoURL: profilePic,\r\n        })\r\n          .then(() => {\r\n            dispatch(login({\r\n              email: userAuth.user?.email,\r\n              uid: userAuth.user?.uid,\r\n              displayName: name,\r\n              photoURL: profilePic,\r\n            }));\r\n          });\r\n      }).catch(error => alert(error));\r\n  };\r\n\r\n  const signUpGoogle = (e: any) => {\r\n    e.preventDefault();\r\n    auth.signInWithPopup(provider).catch(error => alert(error.message));\r\n  };\r\n\r\n  return (\r\n    <RegisterContainer>\r\n      <RegisterInnerContainer>\r\n        <h1>Mynd</h1>\r\n        <h2>Register</h2>\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n            placeholder=\"Full name\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={profilePic}\r\n            onChange={e => setProfilePic(e.target.value)}\r\n            placeholder=\"Profile picture URL\"\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            placeholder=\"Email\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n            placeholder=\"Password\"\r\n          />\r\n          <Button className='button' type=\"submit\" onClick={register}>Register</Button>\r\n          <Button className='button' onClick={signUpGoogle}>\r\n            <img src={GoogleIcon} />\r\n            Google Register\r\n          </Button>\r\n          <Button className='button' href='/login'>\r\n            Or Login\r\n          </Button>\r\n        </form>\r\n      </RegisterInnerContainer>\r\n    </RegisterContainer>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\nconst RegisterContainer = styled.div`\r\n  background-color: #2c2c2c;\r\n  height: 100vh;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst RegisterInnerContainer = styled.div`\r\n  padding: 100px;\r\n  text-align: center;\r\n  background: linear-gradient(to bottom, #66ffcc 0%, #99ff99 100%);\r\n  border-radius: 10px;\r\n  box-shadow: 0 1px 3px rgba(0, 255, 0, 1), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  display: grid;\r\n  place-items: center;\r\n\r\n  > h1 {\r\n    color: #ed4f3a;\r\n  }\r\n\r\n  > h2 {\r\n    color: black;\r\n  }\r\n\r\n  > form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    > input {\r\n      width: 35vw;\r\n      height: 5vh;\r\n      font-size: 20px;\r\n      padding-left: 10px;\r\n      margin-bottom: 10px;\r\n      border-radius: 5px;\r\n    }\r\n\r\n    > .button {\r\n      width: 36vw;\r\n      height: 5vh;\r\n      font-size: medium;\r\n      color: #fff;\r\n      background-color: #26a8ff;\r\n      border-radius: 5px;\r\n      margin-bottom: 7px;\r\n\r\n      :hover {\r\n        background-color: white;\r\n        transition: 0.2s;\r\n        color: black;\r\n        cursor: pointer;\r\n      }\r\n\r\n      img {\r\n        object-fit: contain;\r\n        height: 15px;\r\n        margin-right: 5px;\r\n      }\r\n    }\r\n  }\r\n`;","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport \"./App.scss\";\r\nimport Home from './pages/Home';\r\nimport HeroSection from './components/Homepage/HeroSection/user-hero-section';\r\nimport Footer from './components/Footer/Footer';\r\nimport CalendarPage from './pages/CalendarPage';\r\nimport NotFound from './pages/404';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from './firebase';\r\nimport Login from './components/Login/Login';\r\nimport Spinner from 'react-spinkit';\r\nimport Navbar from './components/Navbar/navbar';\r\nimport Register from './components/Login/Register';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login, logout } from './extra/appSlice';\r\n\r\nfunction App() {\r\n  // loads user from firebase\r\n  const [user, loading] = useAuthState(auth);\r\n  // redux stuff\r\n  const dispatch = useDispatch();\r\n  let displayName: string = user?.displayName || '';\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(userAuth => {\r\n      if (userAuth) {\r\n        // user is logged in\r\n        dispatch(\r\n          login({\r\n            email: userAuth.email,\r\n            uid: userAuth.uid,\r\n            displayName: userAuth.displayName,\r\n            photoUrl: userAuth.photoURL,\r\n          })\r\n        );\r\n      } else {\r\n        // user is logged out\r\n        dispatch(logout());\r\n      }\r\n    });\r\n  }, [dispatch]);\r\n\r\n  // when content is loading it shows a nice ball spinning\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <div className=\"loadingContents\">\r\n          <Spinner\r\n            name='ball-spin-fade-loader'\r\n            color='purple'\r\n            fadeIn='none'\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    /*\r\n      very poorly done but ensures you remain on either login or register\r\n      will add a specific home page and a user one later\r\n    */\r\n    <Router>\r\n      <div className=\"app-container\">\r\n      {!user ? (\r\n        <>\r\n          <Switch>\r\n            <Route exact path='/'>\r\n              <Redirect to='/login' />\r\n            </Route>\r\n            <Route path='/login'>\r\n              <Login />\r\n            </Route>\r\n            <Route path='/register'>\r\n              <Register />\r\n            </Route>\r\n            <Route path='*' exact={true}>\r\n              <Redirect to='/login' />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route path='/login'>\r\n              <Redirect to='/' />\r\n            </Route>\r\n            <Route path='/register'>\r\n              <Redirect to='/' />\r\n            </Route>\r\n            <Route path=\"/home\">\r\n              <HeroSection name={displayName} />\r\n            </Route>\r\n            <Route path=\"/calendar\">\r\n              <CalendarPage />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route path='*' exact={true} component={NotFound} />\r\n          </Switch>\r\n        </>\r\n      )}\r\n      </div>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../extra/appSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}